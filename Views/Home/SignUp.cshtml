@model DiveCenterRhodes.Models.User

@using (Html.BeginForm())

{

    @Html.AntiForgeryToken()
    <div class="center">
        <div class="form-horizontal">

            <h4>Signup</h4>

            <hr />

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">

                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                </div>

            </div>


            <div class="form-group">

                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.DateOfBirth, "Date of Birth yyyy-mm-dd", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.MedicalHistory, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.MedicalHistory, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.MedicalHistory, "", new { @class = "text-danger" })

                </div>

            </div>


            <div class="form-group">

                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">

                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                </div>

            </div>

            <div class="form-group">

                <div class="col-md-offset-2 col-md-10">

                    <input type="submit" value="Signup" class="btn btn-default" />

                </div>

            </div>
        </div>

        @if (ViewBag.EmailExists == true)
        {
            <p>User already exists.</p>
        }

        @if (ViewBag.InvalidPostalCode == true)
        {
            <p>Postal Code must contain 5 digits.</p>
        }

        @if (ViewBag.InvalidDate == true)
        {
            <p>Please mind the format of date!</p>
        }
    </div>

}
